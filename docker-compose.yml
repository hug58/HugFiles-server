version: '3.8'

services:

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - VITE_SERVER_URL=http://127.0.0.1:80
    ports:
      - "5173:5173"
    networks:
      - fullstack
    depends_on:
      - nginx

  app:
    image: hugfiles-server-backend:v0
    ports:
      - "8000:8000"
    depends_on:
      - celery

    command: gunicorn --worker-class gevent -w 1 main:app

    environment:
      # - FLASK_ENV=development
      - REDIS_HOST=redis-server
      - CELERY_BROKER_URL=redis://redis-server:6379/0
      - CELERY_RESULT_BACKEND=redis://redis-server:6379/1
      - UPLOAD_FOLDER=data/
      - SECRET_KEY=secret
      - PORT=8000

    healthcheck:
      test: curl --fail http://localhost:8000/ || exit 1
      interval: 5s
      timeout: 1h
      retries: 5

    networks:
      - fullstack

    volumes:
      - shared_data:/app/data  # Montar el mismo volumen en la carpeta /app/data

  celery:
    image: hugfiles-server-backend:v0
    depends_on:
      - redis-server
    environment:
      - REDIS_HOST=redis-server-1
      - CELERY_BROKER_URL=redis://redis-server:6379/0
      - CELERY_RESULT_BACKEND=redis://redis-server:6379/1
      - UPLOAD_FOLDER=data/
    
    command: ["celery",  "-A", "main.celery", "worker", "--loglevel=info"]
    volumes:
      - shared_data:/app/data  

    networks:
      - fullstack

  redis-server:
    image: redis:6.2.5-alpine

    networks:
      - fullstack


  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
      # app:
      #   condition: service_healthy
    networks:
      - fullstack


networks:
  fullstack:
    driver: bridge
volumes:
  shared_data: 